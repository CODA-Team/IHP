#==========================================================================
# Copyright 2024 IHP PDK Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# SPDX-License-Identifier: Apache-2.0
#==========================================================================

#================================
# ---- RESISTOR EXTRACTIONS -----
#================================

logger.info('Starting RESISTOR EXTRACTION')

# ==============
# ---- POLY ----
# ==============

# rhigh
logger.info('Extracting rhigh resistor')
# extract_devices(resistor('res_rhigh', 1360, RES2), { 'R' => rhigh_res, 'C' => poly_con })
extract_devices(resistor_with_bulk('rhigh', 1360, RES3), { 'R' => rhigh_res, 'C' => poly_con, 'W' => poly_con })
# 15% tolerance for rhigh --> rsh [min: 1160, typical: 1360, max: 1560]ohm 
tolerance('res_rhigh', 'R', :relative => 0.15)

# rppd
logger.info('Extracting rppd resistor')
# extract_devices(resistor('res_rppd', 260, RES2), { 'R' => rppd_res, 'C' => poly_con })
extract_devices(resistor_with_bulk('res_rppd', 260, RES3), { 'R' => rppd_res, 'C' => poly_con, 'W' => poly_con })
# 10% tolerance for rppd --> rsh [min: 235, typical: 260, max: 285]ohm
tolerance('res_rppd', 'R', :relative => 0.15)

# rsil
logger.info('Extracting rsil resistor')
# extract_devices(resistor('res_rsil', 7, RES2), { 'R' => rsil_res, 'C' => poly_con })
extract_devices(resistor_with_bulk('res_rppd', 7, RES3), { 'R' => rsil_res, 'C' => poly_con, 'W' => poly_con })
# 12% tolerance for rsil --> rsh [min: 6.2, typical: 7, max: 7.8]ohm
tolerance('res_rsil', 'R', :relative => 0.12)

# ===============
# ---- METAL ----
# ===============

# RM1
logger.info('Extracting lvsres resistor')
extract_devices(resistor('lvsres', 1.0, RES2), { 'R' => lvsres, 'C' => metal1_con })
