#==========================================================================
# Copyright 2024 IHP PDK Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# SPDX-License-Identifier: Apache-2.0
#==========================================================================

#================================
# ------ BJT DERIVATIONS --------
#================================

logger.info('Starting BJT DERIVATIONS')

# =============
# ---- NPN ----
# =============

logger.info('Starting NPN-BJT DERIVATIONS')

bjt_exclude = gatpoly_drw.join(salblock_drw).join(polyres_drw)
                      .join(extblock_drw).join(nsd_drw).join(recog_diode)
                      .join(recog_esd).join(substrate_drw)

npn_exclude = nwell_drw.join(nbulay_drw).join(pwell_block).join(bjt_exclude)

# ---------- General NPN ----------
npn_c_exc = emwind_drw.join(emwihv_drw).join(activ_mask)
            .join(nsd_block).join(heattrans_drw).join(npn_exclude)
npn_b_exc = emwind_drw.join(emwihv_drw).join(heattrans_drw).join(npn_exclude)

npn_sub = trans_drw.and(pwell).not(npn_exclude)

# ---------- npn13G2 ----------
# npn13G2 exclusion layers
npn13G2_e_exc = activ_drw.join(emwihv_drw).join(npn_exclude)
npn13G2_b_exc = npn_b_exc.join(activ_mask)

# npn13G2 nodes
npn13G2_e_ = emwind_drw.and(activ_mask).and(heattrans_drw).and(nsd_block).and(trans_drw).not(npn13G2_e_exc)
npn13G2_e = npn13G2_e_.with_bbox_min(0.07.um).with_bbox_max(0.9.um).with_area(0.063.um)
npn13G2_b = nsd_block.and(pwell).and(trans_drw).not(npn13G2_b_exc)
npn13G2_c = activ_drw.and(pwell).and(trans_drw).not_overlapping(npn_c_exc)
npn13G2_ports = npn13G2_c.join(npn13G2_b).join(npn13G2_e)

# ---------- npn13G2L ----------
# npn13G2L exclusion layers
npn13G2l_e_exc = activ_mask.join(nsd_block).join(emwihv_drw).join(npn_exclude)
npn13G2l_b_exc = npn_b_exc.join(activ_drw).join(nsd_block)

# npn13G2L nodes
npn13G2l_e_ = emwind_drw.and(activ_drw).and(heattrans_drw).and(trans_drw).not(npn13G2l_e_exc)
npn13G2l_e = npn13G2l_e_.with_bbox_min(0.07.um).with_bbox_max(1.um, 2.5.um).with_area(0.07.um, 0.175.um)
npn13G2l_b = activ_mask.and(trans_drw).and(pwell).not(npn13G2l_b_exc)
npn13G2l_c = npn13G2_c
# npn13G2l_ports = npn13G2l_c.join(npn13G2l_b).join(npn13G2l_e)
npn13G2l_ports = metal1_con.overlapping(npn13G2l_c).join(metal1_con.overlapping(npn13G2l_b)).join(npn13G2l_e)

# ---------- npn13G2V ----------
# npn13G2V exclusion layers
npn13G2v_e_exc = activ_mask.join(nsd_block).join(emwind_drw).join(npn_exclude)

# npn13G2V nodes
npn13G2v_e_ = emwihv_drw.and(activ_drw).and(heattrans_drw).and(trans_drw).not(npn13G2v_e_exc)
npn13G2v_e = npn13G2v_e_.with_bbox_min(0.12.um).with_bbox_max(1.um, 5.um).with_area(0.12.um, 0.6.um)
npn13G2v_b = npn13G2l_b
npn13G2v_c = npn13G2_c
npn13G2v_ports = npn13G2v_c.join(npn13G2v_b).join(npn13G2v_e)

# =============
# ---- PNP ----
# =============

logger.info('Starting PNP-BJT DERIVATIONS')

pnp_exclude = heattrans_drw.join(trans_drw).join(emwind_drw)
                .join(emwihv_drw).join(nsd_block).join(bjt_exclude)

# pnp general nodes DERIVATIONS
pnp_e = pactiv.and(nwell_iso).not(pnp_exclude)
pnp_b = nactiv.and(nwell_iso).not(pnp_exclude)
pnp_c = ptap.not(pnp_exclude)

# pnp_mpa nodes DERIVATIONS
pnp_mpa_e = pnp_e.and(pnp_b.extents).and(pnp_c.extents)
pnp_mpa_b = pnp_b.interacting(pnp_b.extents.interacting(pnp_mpa_e))
pnp_mpa_c = pnp_c.interacting(pnp_c.extents.interacting(pnp_mpa_e))
